{
  "address": "0x75E049E6194c00cC8c7871BCf9E6F7ACA774DBAe",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6fa8a4ea365d01805c50ac5e73a222d364aa5329bb4ace12b705f72ee2c98ae7",
  "receipt": {
    "to": null,
    "from": "0xcb864A8EF76928c90fF975A5A4461FDA6572855d",
    "contractAddress": "0x75E049E6194c00cC8c7871BCf9E6F7ACA774DBAe",
    "transactionIndex": 39,
    "gasUsed": "810011",
    "logsBloom": "0x
    "blockHash": "0x6251cb04680142e63df30faa7deaca6958a52e92ceaeb5e78b197aa849f98471",
    "transactionHash": "0x6fa8a4ea365d01805c50ac5e73a222d364aa5329bb4ace12b705f72ee2c98ae7",
    "logs": [],
    "blockNumber": 6161370,
    "cumulativeGasUsed": "7001877",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "a8893387dd89babb2f847cc2b2490422",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address public immutable i_owner;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        //require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"Didn't send enough ether !\\\");\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Didn't send enough ether !\\\");\\n        funders.push(msg.sender); // Saving the funder's address.\\n        addressToAmountFunded[msg.sender] += msg.value; // Saving the funder's amount to his address.\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 index = 0; index < funders.length; index++) {\\n            addressToAmountFunded[funders[index]] = 0;\\n        }\\n        funders = new address[](0); // Reset the funders array.\\n        \\n        // using payable address.\\n    \\n        // transfer -> throws error if it's used too much gas -> automatically reverts the transaction.\\n        //payable(msg.sender).transfer(address(this).balance);\\n        \\n        // send\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess, \\\"Send failed\\\"); // if it fails, we revert the transactions with require.\\n\\n        // call -> lower layer command -> recommended way to transfer tokens.\\n        // (bool callSuccess, bytes memory dataReturned) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\"); // if it fails, we revert the transactions with require.\\n    }\\n\\n    modifier onlyOwner {\\n        //require(msg.sender == i_owner, \\\"You are not the owner\\\");\\n        //require(msg.sender == i_owner, NotOwner());\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _; // execute the other code after.\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x30c8347914c82f4581a5fdc514397802c74760e9ac52ee8a6a4e4c15f23407be\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        // Sepolia Testnet: https://docs.chain.link/data-feeds/price-feeds/addresses?network=ethereum&page=1#sepolia-testnet\\r\\n        // ETH/USD Address: 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        //(uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound) = priceFeed.latestRoundData();\\r\\n        (,int256 answer,,,) = priceFeed.latestRoundData();\\r\\n        // ETH in terms of USD\\r\\n        // 3000.00000000\\r\\n        return uint256(answer * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\r\\n        return  ethAmountInUSD;\\r\\n    }\\r\\n\\r\\n    function getVersion() internal view returns(uint256) {\\r\\n        // Sepolia Testnet: https://docs.chain.link/data-feeds/price-feeds/addresses?network=ethereum&page=1#sepolia-testnet\\r\\n        // ETH/USD Address: 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        return AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306).version();\\r\\n    }\\r\\n\\r\\n    function getDecimals() internal view returns(uint8) {\\r\\n        // Sepolia Testnet: https://docs.chain.link/data-feeds/price-feeds/addresses?network=ethereum&page=1#sepolia-testnet\\r\\n        // ETH/USD Address: 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        return AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306).decimals();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb3eae6143ce46f058fcd15082ed63f553132f2ed75562ab75142798b6561a08b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ea2380380610ea283398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d4361015f600039600081816102e601526105650152610d436000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100cb60048036038101906100c6919061079d565b610518565b6040516100d891906107e3565b60405180910390f35b3480156100ed57600080fd5b506100f6610530565b60405161010391906107e3565b60405180910390f35b34801561011857600080fd5b5061012161053d565b60405161012e919061085d565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610563565b6040516101639190610887565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108ce565b610587565b6040516101a09190610887565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c690919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610958565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109a7565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040857600060016000808481548110610392576103916109db565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808060010191505061036c565b50600067ffffffffffffffff81111561042457610423610a0a565b5b6040519080825280602002602001820160405280156104525781602001602082028036833780820191505090505b5060009080519060200190610468929190610693565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048f90610a6a565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610acb565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d283610602565b90506000670de0b6b3a764000085836105eb9190610aeb565b6105f59190610b5c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106749190610c1a565b5050509150506402540be4008161068b9190610c95565b915050919050565b82805482825590600052602060002090810192821561070c579160200282015b8281111561070b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b3565b5b509050610719919061071d565b5090565b5b8082111561073657600081600090555060010161071e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076a8261073f565b9050919050565b61077a8161075f565b811461078557600080fd5b50565b60008135905061079781610771565b92915050565b6000602082840312156107b3576107b261073a565b5b60006107c184828501610788565b91505092915050565b6000819050919050565b6107dd816107ca565b82525050565b60006020820190506107f860008301846107d4565b92915050565b6000819050919050565b600061082361081e6108198461073f565b6107fe565b61073f565b9050919050565b600061083582610808565b9050919050565b60006108478261082a565b9050919050565b6108578161083c565b82525050565b6000602082019050610872600083018461084e565b92915050565b6108818161075f565b82525050565b600060208201905061089c6000830184610878565b92915050565b6108ab816107ca565b81146108b657600080fd5b50565b6000813590506108c8816108a2565b92915050565b6000602082840312156108e4576108e361073a565b5b60006108f2848285016108b9565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865722021000000000000600082015250565b6000610942601a836108fb565b915061094d8261090c565b602082019050919050565b6000602082019050818103600083015261097181610935565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b2826107ca565b91506109bd836107ca565b92508282019050808211156109d5576109d4610978565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a54600083610a39565b9150610a5f82610a44565b600082019050919050565b6000610a7582610a47565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ab5600b836108fb565b9150610ac082610a7f565b602082019050919050565b60006020820190508181036000830152610ae481610aa8565b9050919050565b6000610af6826107ca565b9150610b01836107ca565b9250828202610b0f816107ca565b91508282048414831517610b2657610b25610978565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b67826107ca565b9150610b72836107ca565b925082610b8257610b81610b2d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bac81610b8d565b8114610bb757600080fd5b50565b600081519050610bc981610ba3565b92915050565b6000819050919050565b610be281610bcf565b8114610bed57600080fd5b50565b600081519050610bff81610bd9565b92915050565b600081519050610c14816108a2565b92915050565b600080600080600060a08688031215610c3657610c3561073a565b5b6000610c4488828901610bba565b9550506020610c5588828901610bf0565b9450506040610c6688828901610c05565b9350506060610c7788828901610c05565b9250506080610c8888828901610bba565b9150509295509295909350565b6000610ca082610bcf565b9150610cab83610bcf565b9250828202610cb981610bcf565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf157610cf0610978565b5b8282058414831517610d0657610d05610978565b5b509291505056fea2646970667358221220160960307fca448cc8bc28446d7cc2c9452c7d4af8dcc14896a9bf4be0f9d25864736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100cb60048036038101906100c6919061079d565b610518565b6040516100d891906107e3565b60405180910390f35b3480156100ed57600080fd5b506100f6610530565b60405161010391906107e3565b60405180910390f35b34801561011857600080fd5b5061012161053d565b60405161012e919061085d565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610563565b6040516101639190610887565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108ce565b610587565b6040516101a09190610887565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c690919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610958565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109a7565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040857600060016000808481548110610392576103916109db565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808060010191505061036c565b50600067ffffffffffffffff81111561042457610423610a0a565b5b6040519080825280602002602001820160405280156104525781602001602082028036833780820191505090505b5060009080519060200190610468929190610693565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048f90610a6a565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610acb565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d283610602565b90506000670de0b6b3a764000085836105eb9190610aeb565b6105f59190610b5c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106749190610c1a565b5050509150506402540be4008161068b9190610c95565b915050919050565b82805482825590600052602060002090810192821561070c579160200282015b8281111561070b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b3565b5b509050610719919061071d565b5090565b5b8082111561073657600081600090555060010161071e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076a8261073f565b9050919050565b61077a8161075f565b811461078557600080fd5b50565b60008135905061079781610771565b92915050565b6000602082840312156107b3576107b261073a565b5b60006107c184828501610788565b91505092915050565b6000819050919050565b6107dd816107ca565b82525050565b60006020820190506107f860008301846107d4565b92915050565b6000819050919050565b600061082361081e6108198461073f565b6107fe565b61073f565b9050919050565b600061083582610808565b9050919050565b60006108478261082a565b9050919050565b6108578161083c565b82525050565b6000602082019050610872600083018461084e565b92915050565b6108818161075f565b82525050565b600060208201905061089c6000830184610878565b92915050565b6108ab816107ca565b81146108b657600080fd5b50565b6000813590506108c8816108a2565b92915050565b6000602082840312156108e4576108e361073a565b5b60006108f2848285016108b9565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865722021000000000000600082015250565b6000610942601a836108fb565b915061094d8261090c565b602082019050919050565b6000602082019050818103600083015261097181610935565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b2826107ca565b91506109bd836107ca565b92508282019050808211156109d5576109d4610978565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a54600083610a39565b9150610a5f82610a44565b600082019050919050565b6000610a7582610a47565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ab5600b836108fb565b9150610ac082610a7f565b602082019050919050565b60006020820190508181036000830152610ae481610aa8565b9050919050565b6000610af6826107ca565b9150610b01836107ca565b9250828202610b0f816107ca565b91508282048414831517610b2657610b25610978565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b67826107ca565b9150610b72836107ca565b925082610b8257610b81610b2d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bac81610b8d565b8114610bb757600080fd5b50565b600081519050610bc981610ba3565b92915050565b6000819050919050565b610be281610bcf565b8114610bed57600080fd5b50565b600081519050610bff81610bd9565b92915050565b600081519050610c14816108a2565b92915050565b600080600080600060a08688031215610c3657610c3561073a565b5b6000610c4488828901610bba565b9550506020610c5588828901610bf0565b9450506040610c6688828901610c05565b9350506060610c7788828901610c05565b9250506080610c8888828901610bba565b9150509295509295909350565b6000610ca082610bcf565b9150610cab83610bcf565b9250828202610cb981610bcf565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf157610cf0610978565b5b8282058414831517610d0657610d05610978565b5b509291505056fea2646970667358221220160960307fca448cc8bc28446d7cc2c9452c7d4af8dcc14896a9bf4be0f9d25864736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}