{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9203c72d1de3a04f903fd29312b450ea8f2290d7c2851535132795f473a60e5b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "973979",
    "logsBloom": "0x
    "blockHash": "0xe2bf5658e37f53c9d21eddebca317615c5a025b7664a684259c35834d96b132f",
    "transactionHash": "0x9203c72d1de3a04f903fd29312b450ea8f2290d7c2851535132795f473a60e5b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "973979",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "bfec0ef56fa2bf2fc76a27e3069b5d84",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Tomas\",\"details\":\"This implements PriceFeed as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for Crowd Funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for Crowd Funding\\n * @author Tomas\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements PriceFeed as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address private immutable i_owner;\\n\\n    // The \\\"s_\\\" is related to Storage memory.\\n    AggregatorV3Interface private s_priceFeed;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    modifier onlyOwner {\\n        //require(msg.sender == i_owner, \\\"You are not the owner\\\");\\n        //require(msg.sender == i_owner, FundMe__NotOwner());\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _; // execute the other code after.\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     */\\n    function fund() public payable {\\n        //require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"Didn't send enough ether !\\\");\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"Didn't send enough ether !\\\");\\n        s_funders.push(msg.sender); // Saving the funder's address.\\n        s_addressToAmountFunded[msg.sender] += msg.value; // Saving the funder's amount to his address.\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 index = 0; index < s_funders.length; index++) {\\n            s_addressToAmountFunded[s_funders[index]] = 0;\\n        }\\n        s_funders = new address[](0); // Reset the s_funders array.\\n        \\n        // using payable address.\\n    \\n        // transfer -> throws error if it's used too much gas -> automatically reverts the transaction.\\n        //payable(msg.sender).transfer(address(this).balance);\\n        \\n        // send\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess, \\\"Send failed\\\"); // if it fails, we revert the transactions with require.\\n\\n        // call -> lower layer command -> recommended way to transfer tokens.\\n        // (bool callSuccess, bytes memory dataReturned) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\"); // if it fails, we revert the transactions with require.\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders; // We read only one time \\\"s_funders\\\".\\n        for (uint256 index = 0; index < funders.length; index++) {\\n            s_addressToAmountFunded[funders[index]] = 0;\\n        }\\n\\n        s_funders = new address[](0); // Reset the s_funders array.\\n        \\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\"); // if it fails, we revert the transactions with require.\\n    }\\n\\n    /* Getters */\\n\\n    function getOwner() public view returns(address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address) {\\n        return s_funders[index];\\n    }\\n    \\n    function getAddressToAmountFunded(address funder) public view returns(uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n    \\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xadec970c3c49033f8c87141c20af8927ca8eed980200d81fab67e0ad538fa696\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        // Sepolia Testnet: https://docs.chain.link/data-feeds/price-feeds/addresses?network=ethereum&page=1#sepolia-testnet\\r\\n        // ETH/USD Address: 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        //(uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound) = priceFeed.latestRoundData();\\r\\n        (,int256 answer,,,) = priceFeed.latestRoundData();\\r\\n        // ETH in terms of USD\\r\\n        // 3000.00000000\\r\\n        return uint256(answer * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\r\\n        return  ethAmountInUSD;\\r\\n    }\\r\\n\\r\\n    function getVersion() internal view returns(uint256) {\\r\\n        // Sepolia Testnet: https://docs.chain.link/data-feeds/price-feeds/addresses?network=ethereum&page=1#sepolia-testnet\\r\\n        // ETH/USD Address: 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        return AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306).version();\\r\\n    }\\r\\n\\r\\n    function getDecimals() internal view returns(uint8) {\\r\\n        // Sepolia Testnet: https://docs.chain.link/data-feeds/price-feeds/addresses?network=ethereum&page=1#sepolia-testnet\\r\\n        // ETH/USD Address: 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        return AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306).decimals();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb3eae6143ce46f058fcd15082ed63f553132f2ed75562ab75142798b6561a08b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011b6380380620011b683398181016040528101906200003791906200011c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e482620000b7565b9050919050565b620000f681620000d7565b81146200010257600080fd5b50565b6000815190506200011681620000eb565b92915050565b600060208284031215620001355762000134620000b2565b5b6000620001458482850162000105565b91505092915050565b60805161103e620001786000396000818161034f0152818161059301526105e2015261103e6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a98565b610304565b6040516100cc9190610ade565b60405180910390f35b3480156100e157600080fd5b506100ea61034d565b005b3480156100f857600080fd5b50610101610582565b60405161010e9190610ade565b60405180910390f35b34801561012357600080fd5b5061012c61058f565b6040516101399190610b08565b60405180910390f35b34801561014e57600080fd5b506101576105b7565b6040516101649190610b82565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105e0565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610bc9565b610879565b6040516101c29190610b08565b60405180910390f35b6802b5e3af16b188000061020860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c190919063ffffffff16565b1015610249576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024090610c53565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102fb9190610ca2565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60028054905081101561047257600060016000600284815481106103fc576103fb610cd6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806001019150506103d5565b50600067ffffffffffffffff81111561048e5761048d610d05565b5b6040519080825280602002602001820160405280156104bc5781602001602082028036833780820191505090505b50600290805190602001906104d292919061098e565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f990610d65565b60006040518083038185875af1925050503d8060008114610536576040519150601f19603f3d011682016040523d82523d6000602084013e61053b565b606091505b505090508061057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610dc6565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610665576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028054806020026020016040519081016040528092919081815260200182805480156106e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161069f575b5050505050905060005b81518110156107685760006001600084848151811061071557610714610cd6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806001019150506106f3565b50600067ffffffffffffffff81111561078457610783610d05565b5b6040519080825280602002602001820160405280156107b25781602001602082028036833780820191505090505b50600290805190602001906107c892919061098e565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107ef90610d65565b60006040518083038185875af1925050503d806000811461082c576040519150601f19603f3d011682016040523d82523d6000602084013e610831565b606091505b5050905080610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c90610dc6565b60405180910390fd5b5050565b60006002828154811061088f5761088e610cd6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108cd836108fd565b90506000670de0b6b3a764000085836108e69190610de6565b6108f09190610e57565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190610f15565b5050509150506402540be400816109869190610f90565b915050919050565b828054828255906000526020600020908101928215610a07579160200282015b82811115610a065782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ae565b5b509050610a149190610a18565b5090565b5b80821115610a31576000816000905550600101610a19565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6582610a3a565b9050919050565b610a7581610a5a565b8114610a8057600080fd5b50565b600081359050610a9281610a6c565b92915050565b600060208284031215610aae57610aad610a35565b5b6000610abc84828501610a83565b91505092915050565b6000819050919050565b610ad881610ac5565b82525050565b6000602082019050610af36000830184610acf565b92915050565b610b0281610a5a565b82525050565b6000602082019050610b1d6000830184610af9565b92915050565b6000819050919050565b6000610b48610b43610b3e84610a3a565b610b23565b610a3a565b9050919050565b6000610b5a82610b2d565b9050919050565b6000610b6c82610b4f565b9050919050565b610b7c81610b61565b82525050565b6000602082019050610b976000830184610b73565b92915050565b610ba681610ac5565b8114610bb157600080fd5b50565b600081359050610bc381610b9d565b92915050565b600060208284031215610bdf57610bde610a35565b5b6000610bed84828501610bb4565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865722021000000000000600082015250565b6000610c3d601a83610bf6565b9150610c4882610c07565b602082019050919050565b60006020820190508181036000830152610c6c81610c30565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cad82610ac5565b9150610cb883610ac5565b9250828201905080821115610cd057610ccf610c73565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d4f600083610d34565b9150610d5a82610d3f565b600082019050919050565b6000610d7082610d42565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610db0600b83610bf6565b9150610dbb82610d7a565b602082019050919050565b60006020820190508181036000830152610ddf81610da3565b9050919050565b6000610df182610ac5565b9150610dfc83610ac5565b9250828202610e0a81610ac5565b91508282048414831517610e2157610e20610c73565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6282610ac5565b9150610e6d83610ac5565b925082610e7d57610e7c610e28565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ea781610e88565b8114610eb257600080fd5b50565b600081519050610ec481610e9e565b92915050565b6000819050919050565b610edd81610eca565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b600081519050610f0f81610b9d565b92915050565b600080600080600060a08688031215610f3157610f30610a35565b5b6000610f3f88828901610eb5565b9550506020610f5088828901610eeb565b9450506040610f6188828901610f00565b9350506060610f7288828901610f00565b9250506080610f8388828901610eb5565b9150509295509295909350565b6000610f9b82610eca565b9150610fa683610eca565b9250828202610fb481610eca565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fec57610feb610c73565b5b828205841483151761100157611000610c73565b5b509291505056fea2646970667358221220b989d38bb37cf4c1300753d0cd0228112afdb4a1068f6dfba8cd18a81a43327164736f6c63430008180033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a98565b610304565b6040516100cc9190610ade565b60405180910390f35b3480156100e157600080fd5b506100ea61034d565b005b3480156100f857600080fd5b50610101610582565b60405161010e9190610ade565b60405180910390f35b34801561012357600080fd5b5061012c61058f565b6040516101399190610b08565b60405180910390f35b34801561014e57600080fd5b506101576105b7565b6040516101649190610b82565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105e0565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610bc9565b610879565b6040516101c29190610b08565b60405180910390f35b6802b5e3af16b188000061020860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c190919063ffffffff16565b1015610249576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024090610c53565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102fb9190610ca2565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60028054905081101561047257600060016000600284815481106103fc576103fb610cd6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806001019150506103d5565b50600067ffffffffffffffff81111561048e5761048d610d05565b5b6040519080825280602002602001820160405280156104bc5781602001602082028036833780820191505090505b50600290805190602001906104d292919061098e565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f990610d65565b60006040518083038185875af1925050503d8060008114610536576040519150601f19603f3d011682016040523d82523d6000602084013e61053b565b606091505b505090508061057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610dc6565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610665576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028054806020026020016040519081016040528092919081815260200182805480156106e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161069f575b5050505050905060005b81518110156107685760006001600084848151811061071557610714610cd6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806001019150506106f3565b50600067ffffffffffffffff81111561078457610783610d05565b5b6040519080825280602002602001820160405280156107b25781602001602082028036833780820191505090505b50600290805190602001906107c892919061098e565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107ef90610d65565b60006040518083038185875af1925050503d806000811461082c576040519150601f19603f3d011682016040523d82523d6000602084013e610831565b606091505b5050905080610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c90610dc6565b60405180910390fd5b5050565b60006002828154811061088f5761088e610cd6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108cd836108fd565b90506000670de0b6b3a764000085836108e69190610de6565b6108f09190610e57565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190610f15565b5050509150506402540be400816109869190610f90565b915050919050565b828054828255906000526020600020908101928215610a07579160200282015b82811115610a065782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ae565b5b509050610a149190610a18565b5090565b5b80821115610a31576000816000905550600101610a19565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6582610a3a565b9050919050565b610a7581610a5a565b8114610a8057600080fd5b50565b600081359050610a9281610a6c565b92915050565b600060208284031215610aae57610aad610a35565b5b6000610abc84828501610a83565b91505092915050565b6000819050919050565b610ad881610ac5565b82525050565b6000602082019050610af36000830184610acf565b92915050565b610b0281610a5a565b82525050565b6000602082019050610b1d6000830184610af9565b92915050565b6000819050919050565b6000610b48610b43610b3e84610a3a565b610b23565b610a3a565b9050919050565b6000610b5a82610b2d565b9050919050565b6000610b6c82610b4f565b9050919050565b610b7c81610b61565b82525050565b6000602082019050610b976000830184610b73565b92915050565b610ba681610ac5565b8114610bb157600080fd5b50565b600081359050610bc381610b9d565b92915050565b600060208284031215610bdf57610bde610a35565b5b6000610bed84828501610bb4565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865722021000000000000600082015250565b6000610c3d601a83610bf6565b9150610c4882610c07565b602082019050919050565b60006020820190508181036000830152610c6c81610c30565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cad82610ac5565b9150610cb883610ac5565b9250828201905080821115610cd057610ccf610c73565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d4f600083610d34565b9150610d5a82610d3f565b600082019050919050565b6000610d7082610d42565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610db0600b83610bf6565b9150610dbb82610d7a565b602082019050919050565b60006020820190508181036000830152610ddf81610da3565b9050919050565b6000610df182610ac5565b9150610dfc83610ac5565b9250828202610e0a81610ac5565b91508282048414831517610e2157610e20610c73565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6282610ac5565b9150610e6d83610ac5565b925082610e7d57610e7c610e28565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ea781610e88565b8114610eb257600080fd5b50565b600081519050610ec481610e9e565b92915050565b6000819050919050565b610edd81610eca565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b600081519050610f0f81610b9d565b92915050565b600080600080600060a08688031215610f3157610f30610a35565b5b6000610f3f88828901610eb5565b9550506020610f5088828901610eeb565b9450506040610f6188828901610f00565b9350506060610f7288828901610f00565b9250506080610f8388828901610eb5565b9150509295509295909350565b6000610f9b82610eca565b9150610fa683610eca565b9250828202610fb481610eca565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fec57610feb610c73565b5b828205841483151761100157611000610c73565b5b509291505056fea2646970667358221220b989d38bb37cf4c1300753d0cd0228112afdb4a1068f6dfba8cd18a81a43327164736f6c63430008180033",
  "devdoc": {
    "author": "Tomas",
    "details": "This implements PriceFeed as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for Crowd Funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}